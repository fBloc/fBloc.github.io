"use strict";(self.webpackChunkbloc_doc=self.webpackChunkbloc_doc||[]).push([[2299],{224:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var o=t(2374);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),p=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return o.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(t),f=r,d=m["".concat(c,".").concat(f)]||m[f]||s[f]||l;return t?o.createElement(d,a(a({ref:n},u),{},{components:t})):o.createElement(d,a({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,a=new Array(l);a[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<l;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4014:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return s}});var o=t(7283),r=t(3662),l=(t(2374),t(224)),a=["components"],i={sidebar_position:2},c="Python",p={unversionedId:"blocDev/Python",id:"blocDev/Python",title:"Python",description:"\u8bf7\u5728\u8fd9\u91cc\u67e5\u770b\u6700\u65b0\u6587\u6863\u3002",source:"@site/docs/blocDev/Python.md",sourceDirName:"blocDev",slug:"/blocDev/Python",permalink:"/docs/blocDev/Python",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Go",permalink:"/docs/blocDev/Go"},next:{title:"web\u7aef\u529f\u80fd\u7b80\u4ecb",permalink:"/docs/category/web\u7aef\u529f\u80fd\u7b80\u4ecb"}},u={},s=[{value:"bloc function\u662f\u4ec0\u4e48\uff1f",id:"bloc-function\u662f\u4ec0\u4e48",level:2},{value:"\u5f00\u53d1bloc function\u6559\u7a0b",id:"\u5f00\u53d1bloc-function\u6559\u7a0b",level:2},{value:"\u51c6\u5907",id:"\u51c6\u5907",level:3},{value:"\u7f16\u5199bloc function",id:"\u7f16\u5199bloc-function",level:3},{value:"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801",id:"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801",level:3},{value:"\u5411 bloc-server \u6c47\u62a5",id:"\u5411-bloc-server-\u6c47\u62a5",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3},{value:"\u5176\u4ed6\u8d44\u6599",id:"\u5176\u4ed6\u8d44\u6599",level:2}],m={toc:s};function f(e){var n=e.components,t=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"python"},"Python"),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u672c\u9875\u9762\u7684\u6587\u6863\u5185\u5bb9\u53ef\u80fd\u4e0d\u662f\u6700\u65b0")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"\u8bf7\u5728",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc-client-python/blob/main/README.zh-CN.md"},"\u8fd9\u91cc"),"\u67e5\u770b\u6700\u65b0\u6587\u6863\u3002"))),(0,l.kt)("p",null,"\u53ef\u4ee5\u57fa\u4e8e\u6b64SDK\u4f7f\u7528\u5f00\u53d1\u57fa\u4e8epython\u8bed\u8a00\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"bloc function")),(0,l.kt)("p",null,"\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u5927\u6982\u4e86\u89e3\u4e86",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc"},"bloc"),"\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u5df2\u7ecf\u901a\u8fc7",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc/blob/main/docs/guide/deploy_local_environment_guide.md"},"\u6559\u7a0b"),"\u5728\u672c\u5730\u73af\u5883\u90e8\u7f72\u4e86bloc\u73af\u5883"),(0,l.kt)("h2",{id:"bloc-function\u662f\u4ec0\u4e48"},"bloc function\u662f\u4ec0\u4e48\uff1f"),(0,l.kt)("p",null,"bloc function\u5c31\u662f\u5f00\u53d1\u8005\u901a\u8fc7\u5bf9\u5e94\u8bed\u8a00\u7684bloc client SDK\u5f00\u53d1\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u5728\u90e8\u7f72\u540e\u4fbf\u80fd\u591f\u88ab\u7528\u6237\u5728bloc\u524d\u7aef\u770b\u5230\uff0c\u5e76\u53ef\u88ab\u7f16\u5165\u5de5\u4f5c\u6d41\u8fdb\u884c\u7ec4\u5408\u548c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u53c2\u6570\u3002\u5f85\u5230\u5bf9\u5e94\u5de5\u4f5c\u6d41\u6267\u884c\u65f6\u5230\u6b64\u51fd\u6570\u65f6\uff0c\u5c31\u4f1a\u6309\u7167\u7528\u6237\u5728\u524d\u7aef\u914d\u7f6e\u7684\u53c2\u6570\u8fdb\u884c\u6267\u884c\u5e76\u4e0a\u62a5\u8fd0\u884c\u4fe1\u606f\u548c\u8fd0\u884c\u7ed3\u679c\u5230bloc\u3002"),(0,l.kt)("h2",{id:"\u5f00\u53d1bloc-function\u6559\u7a0b"},"\u5f00\u53d1bloc function\u6559\u7a0b"),(0,l.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 bloc function\u6765\u8fdb\u884c\u8bf4\u660e\u3002"),(0,l.kt)("p",null,"\u5176\u63a5\u6536\u591a\u4e2a\u6574\u6570\uff0c\u5e76\u4e14\u63a5\u6536\u4e00\u4e2a\u7279\u5b9a\u7684\u7b97\u6cd5\u3002\u7136\u540e\u5bf9\u90a3\u4e9b\u6570\u5b57\u6267\u884c\u5bf9\u5e94\u7684\u7b97\u6cd5"),(0,l.kt)("h3",{id:"\u51c6\u5907"},"\u51c6\u5907"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u521b\u5efa\u76ee\u5f55",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir bloc_py_tryout && cd bloc_py_tryout\n"))),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u8bf7\u6309\u7167\u4f60\u4e60\u60ef\u7684\u65b9\u5f0f\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883"),(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5python\u7248\u672c\u7684bloc client SDK:",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"pip install bloc_client\n")))),(0,l.kt)("h3",{id:"\u7f16\u5199bloc-function"},"\u7f16\u5199bloc function"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u3001\u5176\u8868\u793a\u4e86\u8fd9\u4e2abloc function\u8282\u70b9"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# math_calcu.py\nclass MathCalcu(FunctionInterface):\n")),(0,l.kt)("p",{parentName:"li"},"\u800c\u540e\u6b64bloc function \u9700\u8981\u5b9e\u73b0 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc-client-python/blob/main/bloc_client/function_interface.py#L10"},"FunctionInterface"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 ipt_config() \u65b9\u6cd5 - \u5176\u63cf\u8ff0\u4e86\u6b64function\u9700\u8981\u7684\u5165\u53c2:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def ipt_config(self) -> List[FunctionIpt]:\n    return [\n        FunctionIpt(\n            key="numbers",\n            display="int numbers",\n            must=True,\n            components=[\n                IptComponent(\n                    value_type=ValueType.intValueType,  # input value should be int type\n                    formcontrol_type=FormControlType.FormControlTypeInput,  # frontend should use input\n                    hint="input integer numbers",  # hint for user\n                    allow_multi=True,  # multiple input is allowed\n                )\n            ]\n        ),\n        FunctionIpt(\n            key="arithmetic_operator",\n            display="choose arithmetic operators",\n            must=True,\n            components=[\n                IptComponent(\n                    value_type=ValueType.intValueType,\n                    hint="+/-/*/%",\n                    formcontrol_type=FormControlType.FormControlTypeSelect,  # frontend should use select\n                    select_options=[  # select options\n                        SelectOption(label=i.name, value=i.value) for i in ArithmeticOperators\n                    ],\n                    allow_multi=False,  # only allow single select value\n                ),\n            ]\n        )\n    ]\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 opt_config() - \u5176\u63cf\u8ff0\u4e86\u6b64function\u9700\u8981\u7684\u51fa\u53c2:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def opt_config(self) -> List[FunctionOpt]:\n    # \u8fd9\u91cc\u4e5f\u8fd4\u56de\u6210list\u6570\u636e\u7c7b\u578b\uff0c\u662f\u4e3a\u4e86\u5728\u524d\u7aef\u80fd\u591f\u663e\u793a\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u987a\u5e8f\n    return [\n        FunctionOpt(\n            key="result",\n            description="arithmetic operation result",\n            value_type=ValueType.intValueType,\n            is_array=False)\n    ]\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 all_progress_milestones() - \u5176\u5b9a\u4e49\u4e86\u6b64\u51fd\u6570\u5728\u8fd0\u884c\u8fdb\u5ea6\u8fc7\u7a0b\u4e2d\u7684\u9ad8\u53ef\u8bfb\u7684\u91cc\u7a0b\u7891\u4e8b\u4ef6"),(0,l.kt)("p",{parentName:"li"},"\u6b64\u8bbe\u8ba1\u4e3b\u8981\u662f\u4e3a\u8fd0\u884c\u65f6\u95f4\u8f83\u957f\u7684\u51fd\u6570\u51c6\u5907\u7684\u3002\u5f53\u5176\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u5176\u53ef\u4ee5\u4e0a\u62a5\u81ea\u5df1\u5f53\u524d\u8fd0\u884c\u5230\u7684\u8fdb\u5ea6\u91cc\u7a0b\u7891\u3002\u4ece\u800c\u5173\u5fc3\u8fdb\u5ea6\u7684\u4eba\u80fd\u591f\u5728bloc\u524d\u7aef\u770b\u5230\u6b64\u4fe1\u606f\u3002\u5982\u679c\u4f60\u7684bloc function\u5f88\u5feb\u5c31\u80fd\u8fd0\u884c\u5b8c\u6210\uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u8bbe\u7f6e\u8fd9\u4e2a\u4e86\u3002"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def all_progress_milestones(self) -> List[str]:\n    return [\n        "parsing ipt", \n        "in calculation", \n        "finished"]\n')))),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 run() - \u771f\u6b63\u7684\u6267\u884c\u903b\u8f91:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def run(\n    self, \n    ipts: List[FunctionIpt], \n    queue: FunctionRunMsgQueue\n) -> FunctionRunOpt:\n    # \u65e5\u5fd7\u4fe1\u606f\u4f1a\u88ab\u7acb\u5373\u4e0a\u4f20\u5230bloc\u5e76\u80fd\u5728bloc\u524d\u7aef\u88ab\u8bbf\u95ee\u5230\n    # \u4e5f\u5c31\u662f\u8bf4\u8fd0\u884c\u4e2d\u7684\u51fd\u6570\uff0c\u5176\u5b9e\u65f6\u65e5\u5fd7\u80fd\u5728bloc\u524d\u7aef\u770b\u5230\n    queue.report_log(LogLevel.info, "start")\n\n    # \u6c47\u62a5\u8fdb\u5ea6\u91cc\u7a0b\u7891\uff1a\u8fd9\u91cc\u7684\u6c47\u62a5\u7d22\u5f15\u662f0\u3002\u5176\u4e5f\u80fd\u5b9e\u65f6\u5728bloc\u524d\u7aef\u88ab\u770b\u5230\n    queue.report_high_readable_progress(progress_milestone_index=0)\n\n    numbersSlice = ipts[0].components[0].value\n    if not numbersSlice:\n        queue.report_function_run_finished_opt(\n            FunctionRunOpt(\n                suc=False,  # \u51fd\u6570\u8fd0\u884c\u5931\u8d25\u4e86\n                intercept_below_function_run=True,  # \u62e6\u622a\u6b64\u8282\u70b9\u4e0b\u6e38\u8282\u70b9\u7684\u8fd0\u884c\n                error_msg="parse ipt `numbers` failed",  # \u62a5\u9519\u63cf\u8ff0\n            )\n        )\n        # \u5f53\u51fd\u6570\u8fd0\u884c\u5931\u8d25\u65f6\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u62e6\u622a\u5176\u4e0b\u6e38\u7684\u8fd0\u884c\n        return\n\n    try:\n        operator = ArithmeticOperators(ipts[1].components[0].value)\n    except ValueError:\n        queue.report_function_run_finished_opt( \n            FunctionRunOpt(\n                suc=False, \n                intercept_below_function_run=True,\n                error_msg=f"""arithmetic_operator({ipts[1].components[0].value}) not in {list(map(lambda c: c.value, ArithmeticOperators))}"""\n            )\n        )\n        return\n    # AllProcessStages() index 1 - "in calculation". which also will be represented in the frontend immediately.\n    queue.report_high_readable_progress(progress_milestone_index=1)\n\n    ret = 0\n    if operator == ArithmeticOperators.addition:\n        ret = sum(numbersSlice)\n    elif operator == ArithmeticOperators.subtraction:\n        ret = numbersSlice[0] - sum(numbersSlice[1:])\n    elif operator == ArithmeticOperators.multiplication:\n        ret = numbersSlice[0]\n        for i in numbersSlice[1:]:\n            ret *= i\n    elif operator == ArithmeticOperators.multiplication:\n        ret = numbersSlice[0]\n        for i in numbersSlice[1:]:\n            ret //= i\n    \n    queue.report_high_readable_progress(progress_milestone_index=2)\n    queue.report_function_run_finished_opt(\n        FunctionRunOpt(\n            suc=True, \n            intercept_below_function_run=False,\n            description=f"received {len(numbersSlice)} number",\n            optKey_map_data={\n                \'result\': ret\n            }\n        )\n    )\n')))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5230\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86bloc function\u7684\u6838\u5fc3\u5b9a\u4e49\u4ee3\u7801\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5b83\u5199\u6d4b\u8bd5\u4ee3\u7801")),(0,l.kt)("h3",{id:"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801"},"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"math_calcu_test.py"),"\u4e2d\u7f16\u5199\u7b80\u5355\u7684\u6d4b\u8bd5:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# math_calcu_test.py\nimport unittest\n\nfrom bloc_client import *\n\nfrom math_calcu import MathCalcu\n\nclass TestMathCalcuNode(unittest.TestCase):\n    def setUp(self):\n        self.client = BlocClient.new_client("")\n\n    def test_add(self):\n        opt = self.client.test_run_function(\n            MathCalcu(),\n            [\n                [  # ipt 0\n                    [1, 2]  # component 0, numbers\n                ],\n                [  # ipt 1\n                    1  # "+" operater\n                ],\n            ]\n        )\n        assert isinstance(opt, FunctionRunOpt), "opt should be FunctionRunOpt type"\n        self.assertIsInstance(opt, FunctionRunOpt, "opt is not FunctionRunOpt type")\n        self.assertTrue(opt.suc, "should    suc")\n        self.assertFalse(opt.intercept_below_function_run, "should not intercept below function run")\n        self.assertEqual(opt.optKey_map_data[\'result\'], 3, "result should be 3")\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"if __name__ == '__main__':\n    unittest.main()\n```\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8fd0\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"python math_calcu_test.py"),", \u4f60\u4f1a\u770b\u5230",(0,l.kt)("inlineCode",{parentName:"p"},"OK"),", \u8868\u793a\u4f60\u5f00\u53d1\u7684\u51fd\u6570\u7684\u8fd0\u884c\u6ee1\u8db3\u4f60\u7684\u9884\u671f"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},"$ python math_calcu_test.py\n2022-05-20 17:46:39,989 INFO received log msg: FunctionRunMsg(level=<LogLevel.info: 'info'>, msg='start')\n2022-05-20 17:46:39,989 INFO progress msg: HighReadableFunctionRunProgress(progress_percent=None, msg=None, progress_milestone_index=0)\n2022-05-20 17:46:39,989 INFO progress msg: HighReadableFunctionRunProgress(progress_percent=None, msg=None, progress_milestone_index=1)\n2022-05-20 17:46:39,989 INFO progress msg: HighReadableFunctionRunProgress(progress_percent=None, msg=None, progress_milestone_index=2)\n2022-05-20 17:46:39,989 INFO run finished. opt is: FunctionRunOpt(suc=True, canceled=False, timeout_canceled=False, intercept_below_function_run=False, error_msg='', description='received 2 number', optKey_map_data={'result': 3}, optKey_map_objectStorageKey=None, optKey_map_briefData=None)\n.\n----------------------------------------------------------------------\nRan 1 test in 0.308s\n\nOK\n")))),(0,l.kt)("h3",{id:"\u5411-bloc-server-\u6c47\u62a5"},"\u5411 bloc-server \u6c47\u62a5"),(0,l.kt)("p",null,"\u5f53\u901a\u8fc7\u7f16\u5199\u8db3\u591f\u7684\u6d4b\u8bd5\u786e\u8ba4\u4f60\u7684\u51fd\u6570\u8fd0\u884c\u6ca1\u6709\u95ee\u9898\u4e86\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u90e8\u7f72\u5b83\u6765\u5411bloc-server\u8fdb\u884c\u6c47\u62a5"),(0,l.kt)("p",null,"\u8fd9\u91cc\u6211\u5047\u8bbe\u4f60\u5df2\u7ecf\u901a\u8fc7",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc/blob/main/docs/guide/deploy_local_environment_guide.md"},"\u6559\u7a0b"),"\u90e8\u7f72\u4e86\u4e00\u5957\u672c\u5730bloc\u73af\u5883\u3002\u5982\u679c\u662f\u7684\u8bdd\u3001\u8bf7\u7ee7\u7eed\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"bloc_py_tryout")," \u76ee\u5f55\u521b\u5efa\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"main.py"),"\u6587\u4ef6\uff0c\u5e76\u5199\u5165\u5185\u5bb9:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\n\nfrom bloc_client import BlocClient\n\nfrom math_calcu import MathCalcu\n\nasync def main():\n    client_name = "tryout-python"\n    bloc_client = BlocClient(name=client_name)\n\n    bloc_client.get_config_builder(\n    ).set_server(\n        "127.0.0.1", 8080,\n    ).set_rabbitMQ(\n        user="blocRabbit", password=\'blocRabbitPasswd\',\n        host="127.0.0.1", port=5672\n    ).build_up()\n\n    # create a function group\n    pyClient_func_group = bloc_client.register_function_group("math")\n    # register the function node to upper function group\n    pyClient_func_group.add_function(\n        "calcu", # name your function node\'s name\n        "receive numbers and do certain math operation to them", # the describe of your function node\n        MathCalcu(), # your function implement\n    )\n\n    await bloc_client.run()\n\nif __name__ == "__main__":\n    asyncio.run(main())\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8fd0\u884c:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ python run main.py\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8fd0\u884c\u6210\u529f\u540e\uff0c\u6b64bloc function\u5c31\u6210\u529f\u63d0\u4ea4\u5230bloc\u4e86\u3002\u4ece\u800c\u4f60\u53ef\u4ee5\u5728bloc web\u7aef\u770b\u5230\u4e0e\u4f7f\u7528\u6b64function\u4e86\uff08\u5982\u679c\u4f60\u521a\u521a\u63a5\u89e6bloc web\u7aef\u3001\u4e0d\u6e05\u695a\u6709\u54ea\u4e9b\u64cd\u4f5c\uff0c\u53ef\u89c1",(0,l.kt)("a",{parentName:"p",href:"https://docs.blocapp.xyz/docs/category/web%E7%AB%AF%E5%8A%9F%E8%83%BD%E7%AE%80%E4%BB%8B"},"\u6559\u7a0b"),"\uff09"))),(0,l.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc-client-python/tree/main/bloc_py_tryout"},"\u8fd9\u91cc")),(0,l.kt)("h2",{id:"\u5176\u4ed6\u8d44\u6599"},"\u5176\u4ed6\u8d44\u6599"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f60\u53ef\u4ee5\u5728",(0,l.kt)("a",{parentName:"li",href:"https://github.com/fBloc/bloc-function-demo-py"},"\u8fd9\u91cc")," \u627e\u5230\u66f4\u591a\u66f4\u590d\u6742\u7684bloc function\u4f8b\u5b50")))}f.isMDXComponent=!0}}]);