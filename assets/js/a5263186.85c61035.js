"use strict";(self.webpackChunkbloc_doc=self.webpackChunkbloc_doc||[]).push([[4613],{224:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return b}});var o=t(2374);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},l=Object.keys(n);for(o=0;o<l.length;o++)t=l[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(o=0;o<l.length;o++)t=l[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var c=o.createContext({}),u=function(n){var e=o.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=u(n.components);return o.createElement(c.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,c=n.parentName,p=a(n,["components","mdxType","originalType","parentName"]),m=u(t),b=r,g=m["".concat(c,".").concat(b)]||m[b]||s[b]||l;return t?o.createElement(g,i(i({ref:e},p),{},{components:t})):o.createElement(g,i({ref:e},p))}));function b(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,i=new Array(l);i[0]=m;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=n,a.mdxType="string"==typeof n?n:r,i[1]=a;for(var u=2;u<l;u++)i[u]=t[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9802:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return s}});var o=t(7283),r=t(3662),l=(t(2374),t(224)),i=["components"],a={sidebar_position:1},c="Go",u={unversionedId:"blocDev/Go",id:"blocDev/Go",title:"Go",description:"\u8bf7\u5728\u8fd9\u91cc\u67e5\u770b\u6700\u65b0\u6587\u6863\u3002",source:"@site/docs/blocDev/Go.md",sourceDirName:"blocDev",slug:"/blocDev/Go",permalink:"/docs/blocDev/Go",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"bloc \u51fd\u6570\u5f00\u53d1",permalink:"/docs/category/bloc-\u51fd\u6570\u5f00\u53d1"},next:{title:"Python",permalink:"/docs/blocDev/Python"}},p={},s=[{value:"bloc function\u662f\u4ec0\u4e48\uff1f",id:"bloc-function\u662f\u4ec0\u4e48",level:2},{value:"\u5f00\u53d1bloc function\u6559\u7a0b",id:"\u5f00\u53d1bloc-function\u6559\u7a0b",level:2},{value:"\u51c6\u5907",id:"\u51c6\u5907",level:3},{value:"\u7f16\u5199bloc function",id:"\u7f16\u5199bloc-function",level:3},{value:"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801",id:"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801",level:3},{value:"\u5411 bloc-server \u6c47\u62a5",id:"\u5411-bloc-server-\u6c47\u62a5",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3},{value:"\u5176\u4ed6\u8d44\u6599",id:"\u5176\u4ed6\u8d44\u6599",level:2}],m={toc:s};function b(n){var e=n.components,t=(0,r.Z)(n,i);return(0,l.kt)("wrapper",(0,o.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"go"},"Go"),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"\u672c\u9875\u9762\u7684\u6587\u6863\u5185\u5bb9\u53ef\u80fd\u4e0d\u662f\u6700\u65b0")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"\u8bf7\u5728",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc-client-go/blob/main/README.zh-CN.md"},"\u8fd9\u91cc"),"\u67e5\u770b\u6700\u65b0\u6587\u6863\u3002"))),(0,l.kt)("p",null,"\u53ef\u4ee5\u57fa\u4e8e\u6b64SDK\u4f7f\u7528\u5f00\u53d1\u57fa\u4e8ego\u8bed\u8a00\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"bloc function")),(0,l.kt)("p",null,"\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u5927\u6982\u4e86\u89e3\u4e86",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc"},"bloc"),"\u662f\u4ec0\u4e48\uff0c\u5e76\u4e14\u5df2\u7ecf\u901a\u8fc7",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc/blob/main/docs/guide/deploy_local_environment_guide.md"},"\u6559\u7a0b"),"\u5728\u672c\u5730\u73af\u5883\u90e8\u7f72\u4e86bloc\u73af\u5883"),(0,l.kt)("h2",{id:"bloc-function\u662f\u4ec0\u4e48"},"bloc function\u662f\u4ec0\u4e48\uff1f"),(0,l.kt)("p",null,"bloc function\u5c31\u662f\u5f00\u53d1\u8005\u901a\u8fc7\u5bf9\u5e94\u8bed\u8a00\u7684bloc client SDK\u5f00\u53d1\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u5728\u90e8\u7f72\u540e\u4fbf\u80fd\u591f\u88ab\u7528\u6237\u5728bloc\u524d\u7aef\u770b\u5230\uff0c\u5e76\u53ef\u88ab\u7f16\u5165\u5de5\u4f5c\u6d41\u8fdb\u884c\u7ec4\u5408\u548c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u53c2\u6570\u3002\u5f85\u5230\u5bf9\u5e94\u5de5\u4f5c\u6d41\u6267\u884c\u65f6\u5230\u6b64\u51fd\u6570\u65f6\uff0c\u5c31\u4f1a\u6309\u7167\u7528\u6237\u5728\u524d\u7aef\u914d\u7f6e\u7684\u53c2\u6570\u8fdb\u884c\u6267\u884c\u5e76\u4e0a\u62a5\u8fd0\u884c\u4fe1\u606f\u548c\u8fd0\u884c\u7ed3\u679c\u5230bloc\u3002"),(0,l.kt)("h2",{id:"\u5f00\u53d1bloc-function\u6559\u7a0b"},"\u5f00\u53d1bloc function\u6559\u7a0b"),(0,l.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 bloc function\u6765\u8fdb\u884c\u8bf4\u660e\u3002"),(0,l.kt)("p",null,"\u5176\u63a5\u6536\u591a\u4e2a\u6574\u6570\uff0c\u5e76\u4e14\u63a5\u6536\u4e00\u4e2a\u7279\u5b9a\u7684\u7b97\u6cd5\u3002\u7136\u540e\u5bf9\u90a3\u4e9b\u6570\u5b57\u6267\u884c\u5bf9\u5e94\u7684\u7b97\u6cd5"),(0,l.kt)("h3",{id:"\u51c6\u5907"},"\u51c6\u5907"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u521b\u5efa\u76ee\u5f55",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir bloc_go_tryout && cd bloc_go_tryout\n"))),(0,l.kt)("li",{parentName:"ul"},"\u521d\u59cb\u5316",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go mod init bloc_go_tryout\n"))),(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5\u4f9d\u8d56",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go get github.com/fBloc/bloc-client-go\n"))),(0,l.kt)("li",{parentName:"ul"},"\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u653ebloc function\u7684\u76ee\u5f55",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir bloc_node\n")))),(0,l.kt)("h3",{id:"\u7f16\u5199bloc-function"},"\u7f16\u5199bloc function"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u3001\u5176\u8868\u793a\u4e86\u8fd9\u4e2abloc function\u8282\u70b9"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},"// bloc_node/math_calcu.go\ntype MathCalcu struct {\n}\n")),(0,l.kt)("p",{parentName:"li"},"\u800c\u540e\u6b64bloc function \u9700\u8981\u5b9e\u73b0 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc-client-go/blob/main/function_interface.go#L10"},"BlocFunctionNodeInterface"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 IptConfig() \u65b9\u6cd5 - \u5176\u63cf\u8ff0\u4e86\u6b64function\u9700\u8981\u7684\u5165\u53c2:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func (*MathCalcu) IptConfig() bloc_client.Ipts {\n    return bloc_client.Ipts{\n        {\n            Key:     "numbers",\n            Display: "int numbers",\n            Must:    true, // this ipt must be set\n            Components: []*bloc_client.IptComponent{\n                {\n                    ValueType:       bloc_client.IntValueType,     // input value should be int type\n                    FormControlType: bloc_client.InputFormControl, // frontend should use input\n                    Hint:            "input integer numbers",      // hint for user\n                    AllowMulti:      true,                         // multiple input is allowed\n                },\n            },\n        },\n        {\n            Key:     "arithmetic_operator",\n            Display: "choose arithmetic operators",\n            Must:    true,\n            Components: []*bloc_client.IptComponent{\n                {\n                    ValueType:       bloc_client.IntValueType,\n                    FormControlType: bloc_client.SelectFormControl, // frontend should use select\n                    Hint:            "+/-/*/%",\n                    SelectOptions: []bloc_client.SelectOption{ // select options\n                        {Label: "addition", Value: 1},\n                        {Label: "subtraction", Value: 2},\n                        {Label: "multiplication", Value: 3},\n                        {Label: "division", Value: 4},\n                    },\n                    AllowMulti: false,  // only allow single select value\n                },\n            },\n        },\n    }\n}\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 OptConfig() - \u5176\u63cf\u8ff0\u4e86\u6b64function\u9700\u8981\u7684\u51fa\u53c2:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func (*MathCalcu) OptConfig() bloc_client.Opts {\n    // bloc_client.Opts: array type for a fixed order to show in the frontend which lead to a better user experience\n    return bloc_client.Opts{\n        {\n            Key:         "result",\n            Description: "arithmetic operation result",\n            ValueType:   bloc_client.IntValueType,\n            IsArray:     false,\n        },\n    }\n}\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 AllProgressMilestones() - \u5176\u5b9a\u4e49\u4e86\u6b64\u51fd\u6570\u5728\u8fd0\u884c\u8fdb\u5ea6\u8fc7\u7a0b\u4e2d\u7684\u9ad8\u53ef\u8bfb\u7684\u91cc\u7a0b\u7891\u4e8b\u4ef6"),(0,l.kt)("p",{parentName:"li"},"\u6b64\u8bbe\u8ba1\u4e3b\u8981\u662f\u4e3a\u8fd0\u884c\u65f6\u95f4\u8f83\u957f\u7684\u51fd\u6570\u51c6\u5907\u7684\u3002\u5f53\u5176\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u5176\u53ef\u4ee5\u4e0a\u62a5\u81ea\u5df1\u5f53\u524d\u8fd0\u884c\u5230\u7684\u8fdb\u5ea6\u91cc\u7a0b\u7891\u3002\u4ece\u800c\u5173\u5fc3\u8fdb\u5ea6\u7684\u4eba\u80fd\u591f\u5728bloc\u524d\u7aef\u770b\u5230\u6b64\u4fe1\u606f\u3002\u5982\u679c\u4f60\u7684bloc function\u5f88\u5feb\u5c31\u80fd\u8fd0\u884c\u5b8c\u6210\uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u8bbe\u7f6e\u8fd9\u4e2a\u4e86\u3002"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type progress int\n\nconst (\n    parsingParam progress = iota\n    inCalculation\n    finish\n    maxProgress\n)\n\nfunc (p progress) String() string {\n    switch p {\n    case parsingParam:\n        return "parsing ipt"\n    case inCalculation:\n        return "in calculation"\n    case finish:\n        return "finished"\n    }\n    return "unknown"\n}\n\nfunc (p progress) MilestoneIndex() *int {\n    tmp := int(p)\n    return &tmp\n}\n\nfunc (*MathCalcu) AllProgressMilestones() []string {\n    tmp := make([]string, 0, maxProgress-1)\n    for i := 0; i < int(maxProgress); i++ {\n        tmp = append(tmp, progress(i).String())\n    }\n    return tmp\n}\n')))),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u5b9e\u73b0 Run() - \u771f\u6b63\u7684\u6267\u884c\u903b\u8f91:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},'// Run do the real work\nfunc (*MathCalcu) Run(\n    ctx context.Context,\n    ipts bloc_client.Ipts,\n    progressReportChan chan bloc_client.HighReadableFunctionRunProgress,\n    blocOptChan chan *bloc_client.FunctionRunOpt,\n    logger *bloc_client.Logger,\n) {\n    // logger msg will be reported to bloc-server and can be represent in the frontend\n    // which means during this function\'s running, the frontend can get the realtime log msg\n    logger.Infof("start")\n\n    progressReportChan <- bloc_client.HighReadableFunctionRunProgress{\n        ProgressMilestoneIndex: parsingParam.MilestoneIndex(), // AllProgressMilestones() index 0 - "parsing ipt". which will be represented in the frontend immediately.\n    }\n\n    numbersSlice, err := ipts.GetIntSliceValue(0, 0)\n    if err != nil {\n        blocOptChan <- &bloc_client.FunctionRunOpt{\n            Suc:                       false,                        // function run failed\n            InterceptBelowFunctionRun: true,                         // intercept flow\'s below function run (you can think like raise panic in the flow)\n            ErrorMsg:                  "parse ipt `numbers` failed", // error description\n        }\n        // Suc can be false and InterceptBelowFunctionRun can also be false\n        // which means this function node\'s fail should not intercept it\'s below function node\'s running\n        return\n    }\n    if len(numbersSlice) <= 0 {\n        blocOptChan <- &bloc_client.FunctionRunOpt{\n            Suc:                       true,\n            InterceptBelowFunctionRun: false,\n            Description:               "get no number to do calculation",\n            Detail: map[string]interface{}{ // detail should match the OptConfig()\n                "result": 0,\n            },\n        }\n        return\n    }\n\n    operator, err := ipts.GetIntValue(1, 0)\n    if err != nil {\n        blocOptChan <- &bloc_client.FunctionRunOpt{\n            Suc:                       false,\n            InterceptBelowFunctionRun: true,\n            ErrorMsg:                  "parse ipt `arithmetic_operator` failed",\n        }\n        return\n    }\n\n    progressReportChan <- bloc_client.HighReadableFunctionRunProgress{\n        ProgressMilestoneIndex: inCalculation.MilestoneIndex(), // AllProgressMilestones() index 1 - "in calculation". which also will be represented in the frontend immediately.\n    }\n\n    ret := 0\n    switch operator {\n    case 1:\n        for _, i := range numbersSlice {\n            ret += i\n        }\n    case 2:\n        for _, i := range numbersSlice {\n            ret -= i\n        }\n    case 3:\n        ret = numbersSlice[0]\n        for _, i := range numbersSlice[1:] {\n            ret *= i\n        }\n    case 4:\n        ret = numbersSlice[0]\n        for _, i := range numbersSlice[1:] {\n            if i == 0 {\n                blocOptChan <- &bloc_client.FunctionRunOpt{\n                    Suc:                       false,\n                    InterceptBelowFunctionRun: true,\n                    ErrorMsg:                  "division not allowed zero as denominator",\n                }\n                return\n            }\n            ret /= i\n        }\n    default:\n        blocOptChan <- &bloc_client.FunctionRunOpt{\n            Suc:                       false,\n            InterceptBelowFunctionRun: true,\n            ErrorMsg:                  "not valid arithmetic_operator",\n        }\n        return\n    }\n    progressReportChan <- bloc_client.HighReadableFunctionRunProgress{\n        ProgressMilestoneIndex: finish.MilestoneIndex()}\n\n    blocOptChan <- &bloc_client.FunctionRunOpt{\n        Suc:                       true,\n        InterceptBelowFunctionRun: false,\n        Detail:                    map[string]interface{}{"result": ret},\n        Description:               fmt.Sprintf("received %d number", len(numbersSlice)),\n    }\n}\n')))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5230\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86bloc function\u7684\u6838\u5fc3\u5b9a\u4e49\u4ee3\u7801\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5b83\u5199\u6d4b\u8bd5\u4ee3\u7801")),(0,l.kt)("h3",{id:"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801"},"\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"bloc_node/math_calcu_test.go"),"\u4e2d\u7f16\u5199\u7b80\u5355\u7684\u6d4b\u8bd5:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "testing"\n\n    bloc_client "github.com/fBloc/bloc-client-go"\n)\n\nfunc TestMathCalcu(t *testing.T) {\n    blocClient := bloc_client.NewTestClient()\n    funcRunOpt := blocClient.TestRunFunction(\n        &MathCalcu{},\n        [][]interface{}{\n            { // ipt 1 group, numbers\n                []interface{}{1, 2},\n            },\n            { // ipt 2 group, arithmetic operator\n                1, // "+" operater\n            },\n        },\n    )\n    if !funcRunOpt.Suc {\n        t.Errorf("TestMathCalcu failed wit error msg: %s", funcRunOpt.ErrorMsg)\n    }\n    if funcRunOpt.Detail["result"] != 3 {\n        t.Errorf("TestMathCalcu failed, detail: %v", funcRunOpt.Detail)\n    }\n}\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"bloc_node")," \u76ee\u5f55\u4e0b, \u6267\u884c\u547d\u4ee4 ",(0,l.kt)("inlineCode",{parentName:"p"},"go test -v ."),", \u4f60\u53ef\u4ee5\u770b\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"PASS"),". \u8868\u793a\u4f60\u5f00\u53d1\u7684\u51fd\u6570\u7684\u8fd0\u884c\u6ee1\u8db3\u4f60\u7684\u9884\u671f"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ go test -v -count=1  .\n=== RUN   TestMathCalcu\n2022/05/20 12:11:56 reporting progress: {0  0x140000252e0}\n2022/05/20 12:11:56 reporting progress: {0  0x140000252e8}\n2022/05/20 12:11:56 reporting progress: {0  0x14000025338}\n2022/05/20 12:11:56 run finished with resp: &{Suc:true Canceled:false TimeoutCanceled:false InterceptBelowFunctionRun:false ErrorMsg: Description:received 2 number Detail:map[result:3] KeyMapObjectStorageKey:map[] Brief:map[]}\n--- PASS: TestMathCalcu (0.00s)\nPASS\nok      github.com/fBloc/bloc-client-go/examples/bloc_go_tryout/bloc_node       0.109s\n")))),(0,l.kt)("h3",{id:"\u5411-bloc-server-\u6c47\u62a5"},"\u5411 bloc-server \u6c47\u62a5"),(0,l.kt)("p",null,"\u5f53\u901a\u8fc7\u7f16\u5199\u8db3\u591f\u7684\u6d4b\u8bd5\u786e\u8ba4\u4f60\u7684\u51fd\u6570\u8fd0\u884c\u6ca1\u6709\u95ee\u9898\u4e86\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u90e8\u7f72\u5b83\u6765\u5411bloc-server\u8fdb\u884c\u6c47\u62a5"),(0,l.kt)("p",null,"\u8fd9\u91cc\u6211\u5047\u8bbe\u4f60\u5df2\u7ecf\u901a\u8fc7",(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc/blob/main/docs/guide/deploy_local_environment_guide.md"},"\u6559\u7a0b"),"\u90e8\u7f72\u4e86\u4e00\u5957\u672c\u5730bloc\u73af\u5883\u3002\u5982\u679c\u662f\u7684\u8bdd\u3001\u8bf7\u7ee7\u7eed\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"bloc_go_tryout")," \u76ee\u5f55\u521b\u5efa\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"main.go"),"\u6587\u4ef6\uff0c\u5e76\u5199\u5165\u5185\u5bb9:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    bloc_client "github.com/fBloc/bloc-client-go"\n    "github.com/fBloc/bloc-client-go/examples/bloc_go_tryout/bloc_node"\n)\n\nconst appName = "tryout"\n\nfunc main() {\n    client := bloc_client.NewClient(appName)\n\n    // config\n    client.GetConfigBuilder().SetRabbitConfig(\n        "blocRabbit", "blocRabbitPasswd", []string{"127.0.0.1:5672"}, "", // bloc rabbitMQ address\n    ).SetServer(\n        "127.0.0.1", 8080, // bloc-backend-server address\n    ).BuildUp()\n\n    // register your functions\n    sourceFunctionGroup := client.RegisterFunctionGroup("math") // give your function a group name\n    sourceFunctionGroup.AddFunction(\n        "calcu", // name your function node\'s name\n        "receive numbers and do certain math operation to them", // the describe of your function node\n        &bloc_node.MathCalcu{}, // your function implement\n    )\n\n    client.Run()\n}\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8fd0\u884c:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go run main.go\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u8fd0\u884c\u6210\u529f\u540e\uff0c\u6b64bloc function\u5c31\u6210\u529f\u63d0\u4ea4\u5230bloc\u4e86\u3002\u4ece\u800c\u4f60\u53ef\u4ee5\u5728bloc web\u7aef\u770b\u5230\u4e0e\u4f7f\u7528\u6b64function\u4e86\uff08\u5982\u679c\u4f60\u521a\u521a\u63a5\u89e6bloc web\u7aef\u3001\u4e0d\u6e05\u695a\u6709\u54ea\u4e9b\u64cd\u4f5c\uff0c\u53ef\u89c1",(0,l.kt)("a",{parentName:"p",href:"https://docs.blocapp.xyz/docs/category/web%E7%AB%AF%E5%8A%9F%E8%83%BD%E7%AE%80%E4%BB%8B"},"\u6559\u7a0b"),"\uff09"))),(0,l.kt)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fBloc/bloc-client-go/tree/main/examples/bloc_go_tryout"},"\u8fd9\u91cc")),(0,l.kt)("h2",{id:"\u5176\u4ed6\u8d44\u6599"},"\u5176\u4ed6\u8d44\u6599"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f60\u53ef\u4ee5\u5728",(0,l.kt)("a",{parentName:"li",href:"https://github.com/fBloc/bloc-function-demo-go"},"\u8fd9\u91cc")," \u627e\u5230\u66f4\u591a\u66f4\u590d\u6742\u7684bloc function\u4f8b\u5b50")))}b.isMDXComponent=!0}}]);